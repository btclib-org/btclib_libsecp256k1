name: build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build-linux:
    name: "Build Linux"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Upgrade Python packaging tools
      run: |
        pip install --upgrade pip setuptools wheel
        python --version
        pip --version

    - name: Build
      run: python setup.py bdist_wheel --py-limited-api=cp36

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: dist/*

  build-macos:
    name: "Build MacOs"
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Upgrade Python packaging tools
      run: |
        pip install --upgrade pip setuptools wheel
        python --version
        pip --version

    - name: Install dependencies
      run: bash ./.github/scripts/install-macos-deps.sh

    - name: Build
      run: python setup.py bdist_wheel --py-limited-api=cp36

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: dist/*

  build-windows:
    name: "Build Windows"
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          mingw-w64-x86_64-gcc

    - name: Upgrade Python packaging tools
      run: |
        pip install --user --upgrade pip setuptools wheel
        python --version
        pip --version

    - name: Build c library
      shell: msys2 {0}
      # run: python setup.py bdist_wheel --plat-name=win-amd64 --py-limited-api=cp36
      # run: python build.py --windows
      run: |
        cd secp256k1
        bash autogen.sh
        echo "LDFLAGS = -no-undefined" >> Makefile.am
        bash configure --with-pic --disable-shared --disable-tests --disable-benchmark --enable-experimental --enable-module-schnorrsig --host=x86_64-w64-mingw32
        make
        cp .libs/libsecp256k1.a .libs/secp256k1.lib
        ls .libs

    - name: Build
      run: python setup.py bdist_wheel

    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: dist/*
