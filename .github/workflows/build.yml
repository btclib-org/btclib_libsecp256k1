name: build

on: [push, pull_request]

env:
  CIBW_BEFORE_BUILD_MACOS: "bash {project}/.github/scripts/install-macos-deps.sh"

jobs:


  # build-cibuildwheel:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, macos-13]

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.8

  #     - name: Build wheels
  #       run: |
  #         pip install --upgrade pip build cibuildwheel
  #         cibuildwheel

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: ./wheelhouse/*


  build-dynamic-linux:
    name: Build dynamic wheel on linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build wheel
        run: |
          pip install --upgrade pip build wheel auditwheel
          BTCLIB_LIBSECP256K1_DYNAMIC=true python -m build -w
          auditwheel repair dist/*

      - name: Build source
        run: python -m build -s -o wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*


  build-dynamic-macos:
    name: Build dynamic wheel on Macos
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: bash .github/scripts/install-macos-deps.sh

      - name: Build wheel
        run: |
          pip install --upgrade pip build wheel delocate
          BTCLIB_LIBSECP256K1_DYNAMIC=true python -m build -w
          delocate-wheel -w wheelhouse dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*


  build-windows:
    name: "Build on Linux for Windows"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: sudo apt install -y mingw-w64

      - name: Build Windows wheel
        run: |
          pip install --upgrade pip build wheel
          BTCLIB_LIBSECP256K1_CROSS_COMPILE=true HATCH_CFFI_PLATFORM=Windows python -m build -w
          auditwheel repair dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: dist/*
