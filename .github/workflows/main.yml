name: build

on: [push, pull_request]

env:
  CIBW_BEFORE_BUILD_MACOS: "bash {project}/.github/scripts/install-macos-deps.sh"

jobs:


  build-cibuildwheel:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-13]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build wheels
        run: |
          pip install --upgrade pip build cibuildwheel
          cibuildwheel

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*


  build-dynamic-linux:
    name: Build dynamic wheel on linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build wheel
        run: |
          pip install --upgrade pip build wheel auditwheel
          BTCLIB_LIBSECP256K1_DYNAMIC=true python -m build -w
          auditwheel repair dist/*
          
      - name: Test wheel
        run: |
          pip install --find-links wheelhouse/ btclib_libsecp256k1
          pip install pytest
          pytest

      - name: Build source
        run: python -m build -s -o wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*


  build-dynamic-macos:
    name: Build dynamic wheel on Macos
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: bash .github/scripts/install-macos-deps.sh

      - name: Build wheel
        run: |
          pip install --upgrade pip build wheel delocate
          BTCLIB_LIBSECP256K1_DYNAMIC=true HATCH_CFFI_PLATFORM=Darwin python -m build -w
          delocate-wheel -w wheelhouse dist/*

      - name: Test wheel
        run: |
          pip install --find-links wheelhouse/ btclib_libsecp256k1
          pip install pytest
          pytest

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*


  build-windows:
    name: "Build on Linux for Windows"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: sudo apt install -y mingw-w64

      - name: Build Windows wheel
        run: |
          pip install --upgrade pip build wheel
          BTCLIB_LIBSECP256K1_CROSS_COMPILE=true HATCH_CFFI_PLATFORM=Windows python -m build -w

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*


  test:
    name: "Test ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "pypy-3.7", "pypy-3.8", "pypy-3.9"]
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS_NAME: ${{ matrix.os }}
    needs: [build-cibuildwheel, build-windows]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade Python packaging tools
        run: pip install --upgrade pip pytest

      - name: Show runner information
        run: |
          python --version
          pip --version

      - uses: actions/download-artifact@v3
        with:
          workflow: build.yml
          name: wheels
          path: dist

      - name: Install lib
        run: python -m pip install --verbose --find-links dist/ btclib_libsecp256k1

      - name: Test
        run: pytest
